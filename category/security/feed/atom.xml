<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Perfinion's Blog</title><link href="http://blog.perfinion.com/" rel="alternate"></link><link href="http://blog.perfinion.com/category/security/feed/atom.xml" rel="self"></link><id>http://blog.perfinion.com/</id><updated>2016-10-30T12:00:00+08:00</updated><entry><title>SELinux userspace 2.6 released</title><link href="http://blog.perfinion.com/2016/10/selinux-userspace-26-released/" rel="alternate"></link><updated>2016-10-30T12:00:00+08:00</updated><author><name>Jason Zaman</name></author><id>tag:blog.perfinion.com,2016-10-30:2016/10/selinux-userspace-26-released/</id><summary type="html">&lt;p&gt;The SELinux userspace libraries and programs recently released version 2.6. I
bumped them in Gentoo a couple days ago. They add a ton of new features, here
are a few of the main points:&lt;/p&gt;
&lt;p&gt;I finally got semanage and sepolicy updated to use setools4. Setools4 replaces
setools3 which has been unmaintained for quite a long time and had issues with
the new policy versions. If you previously had &lt;code&gt;policy-version = 29&lt;/code&gt; in your
&lt;code&gt;/etc/selinux/semanage.conf&lt;/code&gt;, you can comment it out after updating to
app-admin/setools-4.0.&lt;/p&gt;
&lt;p&gt;genhomedircon has a ton of updates. I added new templating patterns that are
expanded for usernames and ids. I added support for &lt;code&gt;%{USERNAME}&lt;/code&gt; and &lt;code&gt;%{USERID}&lt;/code&gt;
to expand in fcontexts. This was primarily for &lt;code&gt;$XDG_RUNTIME_DIR&lt;/code&gt; adding
&lt;code&gt;/run/user/%{USERID}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;genhomedircon finally has support for %group syntax in the list of users. You
can now do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;semanage login --add -s staff_u -r &lt;span class="s1"&gt;&amp;#39;s0-s0:c0.c1023&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%wheel&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instead of having to hardcode all the admins usernames. This is something I'd
wanted for ages but didn't get around to, so thanks a ton to Gary for this.
Once this has all gone stable I'll look into adding this automatically to
seusers.&lt;/p&gt;
&lt;p&gt;genhomedircon now replaces the whole context instead of only the user part.
This means genhomedircon can support RBACSEP now. This is role-based separation
instead of UBAC like we currently have in gentoo. UBAC has some limitations
about switching users that RBACSEP can would be able to fix. Because of this,
entries mapped to the default user and system_u are no longer special-cased.
This fixes an issue if a user had a homedir that was not in /home the fcontexts
would be missing. There is another side effect of this fix, there is now a
warning printed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;libsemanage.add_user: user system_u not in password file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is caused by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# semanage login -l&lt;/span&gt;
system_u    system_u    s0-s0:c0.c1023    *
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The warning is non-fatal and doesn't actually cause any problems. It is because
system_u is not a valid Linux user so the line is nonsense. I will remove this
line from seusers in the policy when I add %wheel. If you want to make the warning go away now, you can run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;semanage login --delete system_u
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is also a pcre2 USE-flag for using libpcre2 instead of libcpre. The
default is still pcre1 because pcre2 takes up more disk space in the
file_contexts.bin files.&lt;/p&gt;
&lt;p&gt;The full announcement email is &lt;a href="https://marc.info/?l=selinux&amp;amp;m=147646050027049&amp;amp;w=2"&gt;here&lt;/a&gt;&lt;/p&gt;</summary><category term="security"></category><category term="gentoo"></category></entry><entry><title>SELinux desktop profile in Gentoo</title><link href="http://blog.perfinion.com/2016/09/selinux-desktop-profile/" rel="alternate"></link><updated>2016-10-05T22:00:00+08:00</updated><author><name>Jason Zaman</name></author><id>tag:blog.perfinion.com,2016-09-21:2016/09/selinux-desktop-profile/</id><summary type="html">&lt;p&gt;SELinux desktop profiles came up on IRC earlier and I thought it might be a good idea to make a post about.
Currently in gentoo there are only two selinux profiles:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;meriadoc ~ # eselect profile list
Available profile symlink targets:
  [1]   default/linux/amd64/13.0
  [2]   default/linux/amd64/13.0/selinux
  [3]   default/linux/amd64/13.0/desktop
  [4]   default/linux/amd64/13.0/desktop/gnome
  [5]   default/linux/amd64/13.0/desktop/gnome/systemd
  [6]   default/linux/amd64/13.0/desktop/kde
  [7]   default/linux/amd64/13.0/desktop/kde/systemd
  [8]   default/linux/amd64/13.0/desktop/plasma
  [9]   default/linux/amd64/13.0/desktop/plasma/systemd
  [10]  default/linux/amd64/13.0/developer
  [11]  default/linux/amd64/13.0/no-multilib
  [12]  default/linux/amd64/13.0/systemd
  [13]  default/linux/amd64/13.0/x32
  [14]  hardened/linux/amd64
  [15]  hardened/linux/amd64/selinux *
  [16]  hardened/linux/amd64/no-multilib
  [17]  hardened/linux/amd64/no-multilib/selinux
  [18]  hardened/linux/amd64/x32
  [19]  hardened/linux/musl/amd64
  [20]  hardened/linux/musl/amd64/x32
  [21]  default/linux/uclibc/amd64
  [22]  hardened/linux/uclibc/amd64
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;How would one go about having both default/linux/amd64/13.0/desktop and
selinux? We &lt;em&gt;could&lt;/em&gt; add selinux versions of every single other profile but that
would very quickly get unmanageable. Turns out making a custom one is pretty
simple:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;unlink /etc/portage/make.profile
mkdir /etc/portage/make.profile

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &amp;gt; /etc/portage/make.profile/eapi
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gentoo:default/linux/amd64/13.0/desktop&amp;quot;&lt;/span&gt; &amp;gt; /etc/portage/make.profile/parent
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gentoo:features/selinux&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/portage/make.profile/parent
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The parent file will tell portage to first use the desktop profile and then use
the selinux feature on top. It is important that the selinux line comes last
since it needs to override several things that might be set earlier in the
desktop profile.&lt;/p&gt;</summary><category term="security"></category></entry><entry><title>Trusted Boot Part 1</title><link href="http://blog.perfinion.com/2016/08/trusted-boot-part1/" rel="alternate"></link><updated>2016-08-30T12:00:00+08:00</updated><author><name>Jason Zaman</name></author><id>tag:blog.perfinion.com,2016-08-30:2016/08/trusted-boot-part1/</id><summary type="html">&lt;p&gt;I finally managed to get tboot working in a way that makes sense to me. For
those unfamiliar, tboot uses Intel's Trusted eXecution Technology to invoke a
dynamic root of trust and then measure all the components you boot with (eg
kernel and initrd). What took me ages to figure out was how one can upgrade
kernels while keeping this chain working.&lt;/p&gt;
&lt;p&gt;There are two policies in tboot: Launch Control Policy and Verified Launch
Policy. LCP is handled by TXT automagically and is used to make sure the
correct tboot and PCRs are set and either continues boot by executing tboot or
resets the machine. VLP is where the kernel, initrd and any other components
are measured and is handled by tboot after the SINIT has happened.&lt;/p&gt;
&lt;p&gt;The trick I finally figured out is that the policy list needs to be signed with
your own key.  If the policy unsigned (unfortunately what most documentation
shows :-() then tboot will verify the kernels and extend the sha1 hash of the
policy file into PCR 18. This obviously causes problems when upgrading kernels
because everything changes.&lt;/p&gt;
&lt;p&gt;The difference with a signed policy is that instead of using the sha1 of the
policy file itself, tboot will use the sha1 of the signed public key which is
easily kept the same! hurrah!  Now finally I can update kernels and PCR 18 is
unchanged so there is no mess with migrating sealed secrets to new, probably
unknown, PCRs.&lt;/p&gt;
&lt;p&gt;I have extended genkernel to include all the tools needed to start tcsd and
tpm_unsealdata and can successfully unseal a secret from the prompt within the
initrd. Next I need to add the parts to automatically unseal and unlock the
LUKS drive. There will be another post when that's all working.&lt;/p&gt;
&lt;p&gt;Here is the Makefile that I used to output and setup my policies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;KVERS&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell readlink /usr/src/linux &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^linux-//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CMDLINE_TBOOT&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell &lt;span class="nb"&gt;source&lt;/span&gt; /etc/default/grub-tboot&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;GRUB_CMDLINE_TBOOT&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;.&lt;span class="n"&gt;pol&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;.&lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    rm -f list* mle* *.elt vl.pol pcrs.txt

&lt;span class="c"&gt;# Launch Control Policy element for MLE&lt;/span&gt;
&lt;span class="nf"&gt;mle_hash&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; /&lt;span class="n"&gt;boot&lt;/span&gt;/&lt;span class="n"&gt;tboot&lt;/span&gt;.&lt;span class="n"&gt;gz&lt;/span&gt; /&lt;span class="n"&gt;etc&lt;/span&gt;/&lt;span class="n"&gt;default&lt;/span&gt;/&lt;span class="n"&gt;grub&lt;/span&gt;-&lt;span class="n"&gt;tboot&lt;/span&gt;
    lcp_mlehash -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CMDLINE_TBOOT&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; /boot/tboot.gz &amp;gt; mle_hash

&lt;span class="nf"&gt;mle.elt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mle_hash&lt;/span&gt;
    lcp_crtpolelt --create --ctrl 0x01 --type mle --minver &lt;span class="m"&gt;17&lt;/span&gt; --out mle.elt mle_hash

&lt;span class="c"&gt;# LCP element for pcrs&lt;/span&gt;
&lt;span class="nf"&gt;pcrs.txt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; /&lt;span class="n"&gt;sys&lt;/span&gt;/&lt;span class="n"&gt;class&lt;/span&gt;/&lt;span class="n"&gt;tpm&lt;/span&gt;/&lt;span class="n"&gt;tpm&lt;/span&gt;0/&lt;span class="n"&gt;device&lt;/span&gt;/&lt;span class="n"&gt;pcrs&lt;/span&gt;
    egrep &lt;span class="s2"&gt;&amp;quot;^PCR-00&amp;quot;&lt;/span&gt; /sys/class/tpm/tpm0/device/pcrs &amp;gt; pcrs.txt

&lt;span class="nf"&gt;pconf.elt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pcrs&lt;/span&gt;.&lt;span class="n"&gt;txt&lt;/span&gt;
    lcp_crtpolelt --create --ctrl 0x01 --type pconf --out pconf.elt pcrs.txt


&lt;span class="c"&gt;# Make list out of all the policy elements&lt;/span&gt;
&lt;span class="nf"&gt;list_unsig.lst&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mle&lt;/span&gt;.&lt;span class="n"&gt;elt&lt;/span&gt; &lt;span class="n"&gt;pconf&lt;/span&gt;.&lt;span class="n"&gt;elt&lt;/span&gt; &lt;span class="n"&gt;vl&lt;/span&gt;.&lt;span class="n"&gt;elt&lt;/span&gt;
    lcp_crtpollist --create --out list_unsig.lst mle.elt pconf.elt vl.elt

&lt;span class="c"&gt;# Sign the LCP so the pubkey is extended and NVRam is invariant&lt;/span&gt;
&lt;span class="nf"&gt;list_sig.lst&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_unsig&lt;/span&gt;.&lt;span class="n"&gt;lst&lt;/span&gt;
    cp list_unsig.lst list_sig.lst
    lcp_crtpollist --sign --pub pubkey.pem --priv privkey.pem --out list_sig.lst

&lt;span class="c"&gt;# Policy type lists need to have both .pol (in NVRAM) and data separately (loaded by grub)&lt;/span&gt;
&lt;span class="nf"&gt;list.data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list_sig&lt;/span&gt;.&lt;span class="n"&gt;lst&lt;/span&gt;
    lcp_crtpol2 --create --ctrl 0x00 --type list --pol list.pol --data list.data list_sig.lst

&lt;span class="nf"&gt;list.pol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;.&lt;span class="n"&gt;data&lt;/span&gt;


&lt;span class="c"&gt;# Verified Launch Policy for tboot to verify kernel+initrd&lt;/span&gt;
&lt;span class="c"&gt;# ctrl 0x00 means it does not extend module 0 into pcr18&lt;/span&gt;
&lt;span class="nf"&gt;vl.pol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; /&lt;span class="n"&gt;boot&lt;/span&gt;/&lt;span class="n"&gt;initramfs&lt;/span&gt;-&lt;span class="n"&gt;genkernel&lt;/span&gt;-&lt;span class="n"&gt;x&lt;/span&gt;86&lt;span class="n"&gt;_&lt;/span&gt;64-&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;KVERS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;  /&lt;span class="n"&gt;boot&lt;/span&gt;/&lt;span class="n"&gt;vmlinuz&lt;/span&gt;-&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;KVERS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    tb_polgen --create --ctrl 0x00 --type &lt;span class="k"&gt;continue&lt;/span&gt; vl.pol
    tb_polgen --add --num &lt;span class="m"&gt;0&lt;/span&gt; --pcr &lt;span class="m"&gt;19&lt;/span&gt; --hash image --cmdline &lt;span class="s2"&gt;&amp;quot;root=/dev/mapper/root ro console=ttyS0,115200n8 console=tty0 intel_iommu=on noefi&amp;quot;&lt;/span&gt; --image /boot/vmlinuz-&lt;span class="k"&gt;$(&lt;/span&gt;KVERS&lt;span class="k"&gt;)&lt;/span&gt; vl.pol
    tb_polgen --add --num &lt;span class="m"&gt;1&lt;/span&gt; --pcr &lt;span class="m"&gt;20&lt;/span&gt; --hash image --cmdline &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; --image /boot/initramfs-genkernel-x86_64-&lt;span class="k"&gt;$(&lt;/span&gt;KVERS&lt;span class="k"&gt;)&lt;/span&gt; vl.pol

&lt;span class="nf"&gt;vl.elt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;vl&lt;/span&gt;.&lt;span class="n"&gt;pol&lt;/span&gt;
    lcp_crtpolelt --create --ctrl 0x01 --type custom --out vl.elt --uuid tboot vl.pol


&lt;span class="c"&gt;# define the indexes in the TPM&lt;/span&gt;
&lt;span class="nf"&gt;definenv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="c"&gt;    # define the error locality&lt;/span&gt;
    tpmnv_defindex -i 0x20000002 -s &lt;span class="m"&gt;8&lt;/span&gt; -pv &lt;span class="m"&gt;0&lt;/span&gt; -rl 0x07 -wl 0x07 -p &lt;span class="k"&gt;$(&lt;/span&gt;PASSWORD&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="c"&gt;    # define the tboot verified launch policy locality&lt;/span&gt;
    tpmnv_defindex -i 0x20000001 -s &lt;span class="m"&gt;512&lt;/span&gt; -pv 0x02 -p &lt;span class="k"&gt;$(&lt;/span&gt;PASSWORD&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="c"&gt;    # define the TXT launch control policy locality&lt;/span&gt;
    tpmnv_defindex -i owner -s 0x36 -p &lt;span class="k"&gt;$(&lt;/span&gt;PASSWORD&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;


&lt;span class="c"&gt;# write everything to tpm and /boot&lt;/span&gt;
&lt;span class="nf"&gt;writelcp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;.&lt;span class="n"&gt;pol&lt;/span&gt;
    lcp_writepol -i owner -f list.pol -p &lt;span class="k"&gt;$(&lt;/span&gt;PASSWORD&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;writevlp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;vl&lt;/span&gt;.&lt;span class="n"&gt;pol&lt;/span&gt;
    lcp_writepol -i 0x20000001 -f vl.pol -p &lt;span class="k"&gt;$(&lt;/span&gt;PASSWORD&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;writelcp&lt;/span&gt;
    cp list.data /boot/list.data
&lt;/pre&gt;&lt;/div&gt;</summary><category term="security"></category></entry></feed>